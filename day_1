
                                                            EXERCISE_1
# -*- coding: utf-8 -*-
"""
Created on Tue Aug  3 18:25:15 2021

@author: JAMSHID bek
"""

#1 KERAKLI DASTURLAR: BATAFSIL: https://python.sariq.dev/ilk-qadamlar/01-software#repl-it

#       PYTHON: https://python.sariq.dev/ilk-qadamlar/01-software#repl-it
# Ushbu bo'limda Python tilida kod yozish 
# uchun kerak bo'lgan dasturlarni o'rnatamiz.

# Kod yozish uchun avvalo kompyuterimizda Python
# o'rnatilgan bo'lishi kerak. Biz buning uchun 
# Pythonni to'g'ridan-to'g'ri o'rnatib emas, balki 
# Anaconda platformasini o'rnatish orqali amalga 
# oshiramiz. 
# Bunday qilishimizning bir nechta sabablari bor:
# Anaconda Python nisbatan tezroq
# Anaconda biz uchun kerakli bo'lgan qo'shimcha 
# dasturlar va muhim paketlar bilan birga o'rnatiladi
# Anacondada turli dasturlar (loyihalar) uchun alohida 
# muhit yaratish mumkin

# Agar siz turli sabablarga ko'ra kompyuteringizga Python 
# o'rnata olmasangiz, repl.it sahifasi yordamida Python 
# dasturlarini to'g'ridan-to'g'ri brauzerda ham yozishingiz mumkin. 

#       ANACONDA: https://python.sariq.dev/ilk-qadamlar/01-software#anaconda
# Anaconda platformasini o'rnatamiz.
# Kompyuterimizda brauzerni ochib, 
# https://www.anaconda.com/products/individual 
# sahifasiga kiramiz va Download tugmasini bosamiz.

# Kompyuterimizda o'rnatilgan operatsion tizim uchun
# mos keluvchi faylni yuklab olamiz (agar yuqoridagi 
# jumlani tushunmagan bo'lsangiz, katta ehtimollik 
# bilan sizda 64-Bit Windows operatsion tizimi o'rnatilgan) 

# Yuklab olingan faylni ochamiz, va o'rnatamiz 
# (hech qanday o'zgartirishlarga hojat yo'q, 
# NEXT, ACCEPT, FINISH tugmalarini bosib turamiz xolos)

# Anaconda o'rnatilganidan so'ng Windowsdagi dasturlar
# orasida Anaconda Navigator dasturini ochamiz.

#       SPYDER IDE: https://python.sariq.dev/ilk-qadamlar/01-software#kite
# Spyder — Python tilida kod yozich uchun mo'ljallangan dasturlash muhiti 
# va bizning asosiy ish qurolimizdir. Ingliz tilida dasturlash
# muhiti - IDE (Integrated Development Environment) deyiladi.
# Dastur yozish uchun yuzlab turli muhitlar bor. Aslida, umuman muhitsiz, 
# oddiy matn redaktorida ham kod yozishimiz mumkin edi. 
# Lekin Spyder va unga o'xshash muhitlar dasturchilarning 
# ishini yengillatishga qaratilgan. Muhitlar turli qo'shimcha 
# funktsiyalar va foydali xossalarga boy bo'ladi. 

# Python uchun mavjud Dasturlash Muhitlari. 
# Kelajakda siz o'zingiz uchun qulay muhitni
# tanlab, yangi dasturlarni yangi muhitda yozishingiz mumkin. 
# Boshlanishiga esa biz Anaconda bilan birga keladigan qulay 
# va sodda, lekin shu bilan birga funktsiyalarga boy bo'lgan 
# Spyder muhitini tanlaymiz. 
# Spyder dasturini Android Navigator yoki Windows orqali to'g'ridan-to'g'ri
# ochish mumkin.

#       KITE: https://python.sariq.dev/ilk-qadamlar/01-software#kite
# Spyder dastruni ilk marotaba ochganimizda Kite dasturlash yordamchisini 
# (pogramming assistant) o'rnatishni taklif qilishi mumkin. 
# Kite —sun'iy intellekt asosida ishlovchi virtual yordamchi bo'lib,
#  kod yozishni osonlashtiradi. Kite yordamida istalgan funktsiya yoki 
#  komanda haqida qo'shimcha ma'lumot olishingiz mumkin. Shungdek Kite sizga
#  kodlarni to'g'ri yozishda ishora (подсказка) ham ko'rsatib turadi.

# Maslahatim, 5 minut vaqtingizni qizg'anmay, Kite yordamchisini ham o'rnating.
# Va nihoyat Spyder IDE ochiladi.

# Yuqoridagi qadamlarni muvaffqaiyatli yakunlagan bo'lsangiz, 
# siz birinchi dasturingizni yozishga tayyorsiz!










                                                         EXERCISE_2                                     
                                          
# -*- coding: utf-8 -*-
"""
Created on Tue Aug  3 19:11:19 2021

@author: JAMSHID bek
"""

#2 HELLO WORLD  BATAFSIL: https://python.sariq.dev/ilk-qadamlar/hello-world

# Pythonda birinchi dasturimizni yozamiz. 
#         SPYDER IDE BILAN TANISHAMIZ: https://python.sariq.dev/ilk-qadamlar/hello-world#spyder-ide-bilan-tanishamiz
# Spyder muhiti uch qismdan iborat:
#     Matn muharriri —dasturlar yozish uchun.
#     Konsol —qisqa kodlarni bajarib, tekshirib ko'rish uchun.
#     Qo'shimcha ma'lumotlar oynasi. 
#     Bu yerda quyidagi ma'lumotlarni ko'rish mumkin:
#         Turli funktsiyalar haqida yordam
#         Dasturdagi o'zgaruvchilar ro'yhati
#         Grafiklar
#         Fayllar
        
#         BIRINCHI DASTURIMIZ —"Hello World!": https://python.sariq.dev/ilk-qadamlar/hello-world#birinchi-dasturimiz-hello-world
# Keling an'anaga ko'ra barcha dasturchilar birinchi yozadigan dastur, 
# "Hello World!" dasturini yozamiz. 
# Buning uchun Spyder IDE yuqorisidagi menuda File --> New File 
# bo'limini tanlaymiz (yoki klaviaturada Ctrl+N tugmalarini bosamiz).
# Math muhrarrirda yangi, untitled0.py fayli yaratildi.
# Faylga ma'nili nom beramiz, buning uchun File --> Save as.. 
# menusini tanlaymiz (yoki Ctrl+Shift+S) va yangi ochilgan oynada 
# faylga ma'nili nom beramiz.
#     Faylni nomlashda quyidagi qoidalarga amal qiling: 
#             Fayl nomi qisqa, kichkina  lotin harflari bilan va eng muhimi 
#             bo'shliq (пробел) qo'ymasdan yozilgan bo'lishi kerak
#             Fayl nomi .py bilan tugashi kerak (misol uchun faylnomi.py)
#             Faylga ikki so'zdan iborat nom qo'ymoqchi bo'lsangiz so'zlar 
#             orasini tire (-) yoki pastki chiziq (_) bilan ajrating. 
#             Misol uchun: hello-world.py yoki hello_world.py
#             Fayl nomini sonlar bilan boshlamang
    
# Yuqoridagi qoidalarga amal qilgan holda faylga hello.py deb nom beramiz 
# (siz istlagnahca nomalshingiz mumkin) va Save tugmasini bosamiz.

# Matn muharririda quyidagi kodni yozamiz:
# print("Hello World!")
# print() bu Pythondagi mahsus funktsiya bo'lib, () ichida berilgan matn yoki 
# ifodalarni ekranga (konsolga) chiqarish vazifasini bajaradi. 
# Dars davomida berilgan kodlarni albatta o'zingiz ham bajaring. Bu juda muhim!
# Kodimizni bajarish uchun Run (►) tugmasini (yoki F5) bosamiz (yangi ochilgan 
# oynada ham Run tugmasini bosamiz) va konsolda natijani ko'ramiz:
#     Konsolda Hello World! yozuvini ko'rgan bo'lsangiz, 
#     TABRIKLAYMIZ! Siz Pythonda birinchi dasturingizni yozdingiz.

#         AMALIYOT: https://python.sariq.dev/ilk-qadamlar/hello-world#amaliyot
# Spyder konsolida va matn muharririda quyidagi kodlarni yozib, bajarib ko'ring. 
# Siz kutgan natijalar chiqdimi?
#     print('Assalom alaykum')

#     print(Hayrli tong!)

#     print(2+4*2)

#     print(19/5)

#     print(2**4)
# !!!AMALIYOT JAVOBLARINI AMALIYOTNI BAJARGACH UNI TEKSHIRIW UCHUNGINQA OCHING!!!
print('Assalom alaykum')
print('Hayrli tong!')
print(2+4*2)
print(19/5)
print(2**4)                                          
                                          
                                          
        
        
        
        
        
        
        
        
        
                                                  EXERCISE_3
  
  
  
  
# -*- coding: utf-8 -*-
"""
Created on Tue Aug  3 19:49:30 2021

@author: JAMSHID bek
"""

#3 PRINT(), SINTEKS VA ARIFMETIK AMALLAR: https://python.sariq.dev/ilk-qadamlar/03-print
# print() funktsiyasi, Python sintaksi va arifmetik amallar
#         PRINT(): https://python.sariq.dev/ilk-qadamlar/03-print#print
# Avvalgi darsimizning yakunida bir nechta kodlarni pythonda bajarib ko'rishni 
# vazifa qilgan edik. Keling shu kodlarning natijasini ko'ramiz:
#     print("Assalom alaykum")
#     Natija: Assalom alaykum

# Kutilganidek, yuqoridagi kod Assalom alaykum matnini konsolda ko'rsatdi. 
# Keling endi keyingi kodni kiritamiz:

#     print(Hayrli tong!)
#     Natija: SyntaxError: invalid syntax

# Bu safar esa Hayrli tong! yozuvi o'rniga, 
# Syntax Error (sinteksda xatolik) xabari chiqdi. 
# Xatolik qayerda?

# Avval aytganimizdek, print() funktsiyasi matn yoki ifodalarni konsolga 
# chiqarish vazifasini bajaradi. Lekin bu funktsiya to'g'ri ishlashi uchun 
# bir nechta qoidalarga amal qilish lozim. Jumladan, agar konsolga matn 
# chiqarmoqchi bo'lsak, matnimiz albatta qo'shtirnoq yoki (" ") yoki 
# birtirnoq(' ') orasida yozlishi kerak. Demak Hayrli tong! so'zini 
# konsolda chiqarish uchun to'g'ri kod:

#     print("Hayrli tong!")
# yoki
#     print('Hayrli tong!')
# bo'ladi. 
#     Natija: Hayrli tong!

# Qo'shitrnoq yoki birtirnoq ishlatishning afzalliklaridan biri, agar siz 
# chiqarmoqchi bo'lgan matnda ikkovidan biri qatnashgan bo'lsa, print() 
# funktsyasida ikkinchisidan foydalanasiz. Keling quyidagi misolni ko'ramiz:
#     print('Men "Dell" markasidagi noutbuk sotib oldim')
#     Natija: Men "Dell" markasidagi noutbuk sotib oldim

# Yuqoridagi matnda "Dell" so'zi qo'shtirnoq ichida eda. 
# Bu matnni konsolga chiqarish uchun esa, print()funktsyasi 
# ichida matnni birtirnoq ichiga oldik.

# Agar matnni bir necha qatorga bo'lib yozish talab qilinsa, uchtalik 
# qo'shtirnoq(""" """)yoki birtirnoqdan (''' ''')foydalanish mumkin:

#     print("""Odami ersang, demagil odami,
#           Oniki, yo'q xalq g'amidin g'ami""")
#     Natija: 
#         Odami ersang, demagil odami,
#         Oniki, yo'q xalq g'amidin g'ami

# Qatorga bo'lishning yana bir usuli, qator so'nggida \n belgisini qo'yish.

#     print("Odami ersang, demagil odami,\nOniki, yo'q xalq g'amidin g'ami")
#     Natija: 
#         Odami ersang, demagil odami,

# Oniki, yo'q xalq g'amidin g'ami

# Yuoqridagi matnni birtirnoq orqali ham konsolga chiqarish mumkinmi?
#  Matndagi yo'q, g'am so'zlaridagi birtirnoqlar bunga to'sqinlik qilmaydimi? 
#  Qiladi.

# Buning oldini olish uchun esa matndagi birtirnoq belgisidan avval \ belgisini 
# qo'yish lozim. 

#     print('Odami ersang, demagil odami, \nOniki, yo\'q xalq g\'amidin g\'ami')
#     Natija: 
#         Odami ersang, demagil odami, 
#         Oniki, yo'q xalq g'amidin g'ami

# Yuqoridagi kodga e'tibor bergan bo'lsangiz "yo'q" so'zi yo\'q ko'rinishida 
# "g'am" so'zi esa g\'am ko'rinishida yozilgan. Umuman olganda \ belgisi har 
# qanday mahsus belgi oldidan qo'yiladi.

# Agar yuqordagi kodimizda \ belgisini ishlatmaganimizda natija qanday bo'lar edi?

#     print('Odami ersang, demagil odami,\nOniki, yo'q xalq g'amidin g'ami')
#           Natija: SyntaxError: invalid syntax

# Keling shu o'rinda Syntax Error (sinteksda xatolik) haqida ham gaplashaylik. 

#         SINTEKS XATOLIK (SYNTAX ERROR): https://python.sariq.dev/ilk-qadamlar/03-print#sinteks-xatolik-syntax-error
# Har bir tilda orfografik va grammatik qoidalar bo'lgani kabi, dasturlash 
# tillarining ham o'ziga yarasha qonun-qoidalari bor. Bu qoidalar to'plami 
# sinteks (syntax) deb ataladi. Sinteks xatolik (Syntax Error) deb esa shu
#  qoidalarning buzilishiga aytiladi. 

# Misol uchun keraksiz joyda qo'yilgan nuqta, vergul yoki bo'sh joy,
# shuningdek ma'lum funktsiyalar nomini xato yozish (print() o'rniga prit()), 
# ochilmay yoki yopilmay qolgan qavs, noo'rin bo'shliq, qolib ketgan kalit
# so'z (keyword) kabilar ham Syntax Error hisoblanadi.

# Syntax Error eng ko'p uchraydigan xatolik bo'lib, 
# Python bunday xatolik bor dasturlarni bajarmaydi. 

# Biz darslarimiz davomida turli sinteks qoidalar haqida o'z
#  o'rnida yana to'xtalamiz.

#         ARIFMETIK AMALLAR: https://python.sariq.dev/ilk-qadamlar/03-print#arifmetik-amallar
# Amaliyotga qaytamiz, print() funktsiyasi nafaqat matn,
#  balki turli ifodalarni ham konsolga chiqaradi.

# Keling quyidagi kodlarni ham bajaramiz:

#     print(2+4*2)
#     Natija: 10

# Python arifmetik amallarni bajarishda Matematika qoidalariga amal qiladi:

# Qavs ichidagi amallar qavs ortidagilardan avval bajariladi

# Darajaga oshirish (ildiz chiqarish) ko'paytirish va bo'lishdan avval bajariladi

# Ko'paytirish va bo'lish, qo'shish va ayirishdan avval bajariladi

# Boshqa holatlarda ifodalar chapdan o'ngga qarab bajariladi

# Yuqoridagi misolda ham avval ko'paytirish (4*2=8), keyin esa qo'shish
#  amali (2+8=10) bajarildi.

#     print(19/5)
#     Natija: 3.8

# Ko'rib turganingizdek, / belgisi bo'lish amalini bajaradi va natija
#  har doim o'nlik son ko'rinishida bo'ladi (agarchi bo'lish amali 
#  natijasida butun son xosil bo'lsa ham):

#      print(20/5)
#      Natija: 4.0

# Bo'lish amalidan butun son ko'rinishidagi natija 
# olish uchun // belgisidan foydalanamiz:

#     print(16//4)
#     Natija: 4

#     print(10//3)
#     Natija: 3

# Amaliyotimizdagi keyingi kodni ham bajaraylik:

#     print(2**4)
#     Natija: 16

# Yuqoridagi ** belgisi darajaga oshirishni anglatadi, ya'ni 2**4 ifodasi 
# 2 ning 4-darajasini beradi.

# Pythonda oddiy arifmetik amallar quyidagi jadvalda berilgan.

# Operator                 Tavsif                                        Misol

# +                     Qo'shish                                           5+6=11

# -                     Ayirish                                            5-6=-1

# *                     Ko'paytirish                                       5*6=30

# /                     Bo'lish                                      5/6=0.833333

# //                    Bo'lish va butun qismini olish                     5//6=0

# **                    Exponenta (daraja/ildiz)                       5**6=15625

# %                     Bo'linmaning qoldig'ini olish                      15%6=3

# print() yordamida matn va ifodalarni jamlab chiqarish ham mumkin. 
# Buning uchun har bir ifoda va matn vergul (,) bilan ajratiladi:

#     print("To'qqizning kvadrati", 9**2, "ga teng")
#     Natija: To'qqizning kvadrati 81 ga teng

#     print('3x3=',3*3)
#     Natija:3x3= 9

#         IZOHLAR (COMMENTS): https://python.sariq.dev/ilk-qadamlar/03-print#izohlar-comments
# Yaxshi dasturchilarning odatlaridan biri har qanday kodni izohlar 
# bilan tushuntirib ketish. Izohlar kelajakda o'zimiz uchun ham, 
# boshqalar uchun ham dasturimiz qanday ishlashini tushunishda yordam beradi. 

# Quyidagi ikki misolga e'tibor bering, va ulardan qay 
# biri tushunarliroq ekanini solishtiring

#     print(2*5*3.14159)
#     #Radiusi 5 ga teng bo'lgan aylananing uzunligi quyidagicha hisoblanadi
#     print(2*5*3.14159)
# Yuqoridagi misolda # belgisidan keyin yozilgan matn izoh (comment) deyiladi. 

# Izoh alohida qatorda yoki qator oxiridan ham yozilishi mumkin. 
# Python # dan keyingi har qanday matnni (qator oxirigacha) e'tiborsiz qoldiaradi.
#  # dan keyin yozligan kodlar ham bajarilmaydi:

#      print("Assalom alaykum!") # Bu matn konsolda chiqadi
#      #Keyingi qator esa bajarilmaydi
#      #print("Mening ismim Anvar")
#      Natija: Assalom alaykum!

#         AMALIYOT: https://python.sariq.dev/ilk-qadamlar/03-print#amaliyot
# Quyidagi matnni aynan shunday ko'rinishda konsolda chiqaring:

#     1. "Nexia", "Tico", 'Damas' ko'rganlar qilar havas

# Quyidagi misollarga yechimni Pythonda chiqaring. Har bir misoldan 
# avval misol matnini izoh ko'rinishida yozing:

#     2. 5 ning 4-darajasini toping

#     2. 22 ni 4 ga bo'lganda qancha qoldiq qoladi?

#     4. Tomonlari 125 ga teng kvadratning yuzi va perimetrini toping

#     5. Diametri 12 ga teng bo'lgan doiraning yuzini toping  
#         (\pi=3.14π=3.14 deb oling)

#     6. Katetlari 6 va 7 bo'lgan to'g'ri burchakli uchburchakning gipotenuzasini 
#         toping (Pifagor teoremasidan foydalaning)

# Javoblarni savol va yechim ko'rinishida chiqaring: 5 ning 4-darajasi 625

# !!!AMALIYOT JAVOBLARINI AMALIYOTNI BAJARGACH UNI TEKSHIRIW UCHUNGINQA OCHING!!!
# 1-mawq
print('\"nexia\", \"tico\",\'damas\', ko\'rgaanlar qilar havas')
# 2-mawq 5 ning 4-darajasi
print(5**4)
# 3-mawq 22 ni 4 ga bolgandagi qoldiq
print(22%4)
# 4-mawq tomonlari 125 ga teng bolgan kvadrat yuzi va perimetri
print("yuzi" , 125*125)
print("perimetri" , 125*4)
# 5-mawq diametri 12 ga teng bolgan doiraning yuzi
r = 12/2
rk = r**2
print(3.14 * rk)
# 6-mawq katetlari 6 va 7 ga teng bolgan togri burchakli uchburchakni gipotenuzasi
print((6**2+7**2)**(1/2))  
